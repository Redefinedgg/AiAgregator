generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int       @id @default(autoincrement())
  uuid            String    @unique
  username        String    @unique
  email           String    @unique
  password        String
  role            String    @default("USER")
  avatar          String?
  balance         Float     @default(1)
  provider        String    @default("local")
  providerId      String    @default("local")
  isBlocked       Boolean   @default(false)
  isEmailVerified Boolean   @default(false)
  lastLoginAt     DateTime?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  chats           Chat[]
  messages        Message[]
  prompts         Prompt[]
}

model Chat {
  id             Int       @id @default(autoincrement())
  uuid           String    @unique
  authorId       Int
  name           String?
  spent          Float     @default(0)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  author         User      @relation(fields: [authorId], references: [id])
  messages       Message[]
  prompts        Prompt[]
  smartMerges    Int       @default(0)
  levelOfContext Int       @default(0)
}

model Message {
  id             Int      @id @default(autoincrement())
  uuid           String   @unique
  chatId         Int
  authorId       Int
  model          String
  number         Int
  response       String
  spent          Float
  timeOfResponse String
  isSmartMerge   Boolean  @default(false)
  levelOfContext Int      @default(0)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  author         User     @relation(fields: [authorId], references: [id])
  chat           Chat     @relation(fields: [chatId], references: [id])
}

model Prompt {
  id             Int      @id @default(autoincrement())
  uuid           String   @unique
  
  levelOfContext Int      @default(0)
  text           String
  
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  chatId   Int
  authorId Int
  author   User @relation(fields: [authorId], references: [id])
  chat     Chat @relation(fields: [chatId], references: [id])
}

enum Role {
  USER
  PREMIUM
  PREMIUM_PLUS
  PREMIUM_PLUS_PLUS
  ADMIN
}
